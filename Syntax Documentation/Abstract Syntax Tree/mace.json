{
    "Scope": [
        {
            "id": "Global",
            "name": "Global scope",
            "description": "The global or top level scope of the program",
            "type": "Repeated",
            "value": {
                "type": "Variants",
                "value": [
                    {
                        "type": "Component",
                        "value": "Declaration.Variable"
                    }
                ]
            }
        }
    ],
    "Declaration": [
        {
            "id": "Variable",
            "name": "Variable declaration",
            "type": "Component",
            "value": [
                "Templates.LineOfCode",
                {
                    "type": "Group",
                    "value": [
                        {
                            "type": "Component",
                            "value": "Identifier.Type"
                        },
                        {
                            "type": "Match",
                            "value": "\\s+"
                        },
                        {
                            "type": "Component",
                            "value": "Identifier.Variable"
                        },
                        {
                            "type": "Optional",
                            "value": [
                                {
                                    "type": "Match",
                                    "value": "\\s*="
                                },
                                {
                                    "type": "Component",
                                    "value": "Expression.Padded"
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ],
    "Identifier": [
        {
            "id": "Variable",
            "name": "Variable identifier",
            "type": "Match",
            "value": "[a-zA-Z_\\-][a-zA-Z0-9_\\-]{0,127}"
        },
        {
            "id": "Type",
            "name": "Type identifier",
            "type": "Match",
            "value": "[a-zA-Z_\\-][a-zA-Z0-9_\\-]{0,127}"
        }
    ],
    "Expression": [
        {
            "id": "Padded",
            "name": "Padded expression",
            "type": "Variants",
            "value": [
                {
                    "type": "Component",
                    "value": "Literal.Integer"
                },
                {
                    "type": "Component",
                    "value": "Literal.String"
                },
                {
                    "type": "Component",
                    "value": "Literal.Boolean"
                },
                {
                    "type": "Component",
                    "value": "Literal.Array"
                }
            ]
        }
    ],
    "Literal": [
        {
            "id": "String",
            "name": "String literal",
            "type": "Match",
            "value": "\".*\"|'.*'"
        },
        {
            "id": "Integer",
            "name": "Integer literal",
            "type": "Match",
            "value": "([1-9][0-9]*)|0"
        },
        {
            "id": "Boolean",
            "name": "Boolean literal",
            "type": "Match",
            "value": "true|false"
        },
        {
            "id": "Array",
            "name": "Array literal",
            "type": "Group",
            "value": [
                {
                    "type": "Match",
                    "value": "["
                },
                {
                    "type": "Variants",
                    "value": [
                        {
                            "type": "Match",
                            "value": "\\s*"
                        },
                        {
                            "type": "Component",
                            "value": "Expression.Padded"
                        }
                    ]
                },
                {
                    "type": "Match",
                    "value": "]"
                }
            ]
        }
    ],
    "Token": [
        {
            "id": "EndOfLine",
            "name": "End of line",
            "description": "A semiconlon to denote the end of a statement",
            "type": "Match",
            "value": ";"
        },
        {
            "id": "WhiteSpace",
            "name": "White space",
            "description": "A space or tab character",
            "type": "Match",
            "value": "\\s+"
        },
        {
            "id": "OptionalWhiteSpace",
            "name": "White space",
            "description": "A space or tab character",
            "type": "Match",
            "value": "\\s*"
        }
    ],
    "Templates": [
        {
            "id": "LineOfCode",
            "name": "Line of code",
            "description": "A line of code with an infered semicolon and white space",
            "type": "Group",
            "value": [
                {
                    "type": "Component",
                    "value": "Token.OptionalWhiteSpace"
                },
                {
                    "type": "Parameter",
                    "value": []
                },
                {
                    "type": "Component",
                    "value": "Token.EndOfLine"
                },
                {
                    "type": "Component",
                    "value": "Token.OptionalWhiteSpace"
                }
            ]
        }
    ]
}